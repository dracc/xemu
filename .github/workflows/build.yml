name: Build

on: [push, pull_request]

jobs:
  Init:
    runs-on: ubuntu-latest
    steps:
    - name: Create Build Tag
      run: |
        export BUILD_TAG=build-$(date -u +'%Y%m%d%H%M')
        echo "BUILD_TAG=$BUILD_TAG" >> $GITHUB_ENV
        mkdir -p dist
        echo -n $BUILD_TAG > dist/tag
    - name: Upload Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: dist
        path: dist

  Windows:
    runs-on: windows-latest
    needs: Init
    strategy:
      matrix:
        configuration: ["Debug", "Release"]
        include:
        - configuration: Debug
          build_param: --debug
          artifact_name: xemu-win-debug.zip
        - configuration: Release
          build_param:
          artifact_name: xemu-win-release.zip
    steps:
    - name: Clone Tree
      uses: actions/checkout@v2
    - name: Clone Tree (Unshallow)
      run: |
        git fetch --prune --unshallow --tags -f
    - name: Install Dependencies
      run: |
        echo "Downloading MSYS2 environment..."
        Invoke-WebRequest -Uri "https://github.com/mborgerson/xemu-msys2/releases/latest/download/msys64.7z" -OutFile "msys64.7z"
        echo "Extracting MSYS2 environment..."
        7z x -y msys64.7z "-oC:\tools\"
        echo "Updating MSYS2 environment..."
        C:\tools\msys64\usr\bin\bash.exe -lc "pacman -Syu --noconfirm"
        C:\tools\msys64\usr\bin\bash.exe -lc "pacman --needed --noconfirm -S mingw-w64-x86_64-libsamplerate"
    # - name: Initialize Compiler Cache
    #   id: cache
    #   uses: actions/cache@v1
    #   with:
    #     path: C:\tools\msys64\tmp\xemu-ccache
    #     key: cache-${{ runner.os }}-${{ matrix.configuration }}-${{ github.sha }}
    #     restore-keys: cache-${{ runner.os }}-${{ matrix.configuration }}-
    - name: Compile
      run: |
        C:\tools\msys64\usr\bin\bash.exe -lc @"
        set -e
        cd `$GITHUB_WORKSPACE
        # export CCACHE_DIR=/tmp/xemu-ccache
        # export CCACHE_MAXSIZE=250M
        # export PATH="/usr/lib/ccache/bin:/mingw64/bin:`$PATH"
        export PATH="/mingw64/bin:`$PATH"
        ./build.sh ${{ matrix.build_param }}
        # echo -e '\nCompiler Cache Stats:'
        # ccache -s -c
        "@
        7z a ${{ matrix.artifact_name }} .\dist\*
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v1
      with:
        name: dist
        path: ${{ matrix.artifact_name }}
